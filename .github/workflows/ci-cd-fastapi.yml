name: CI/CD - FastAPI BE

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: comot-api

jobs:
  # ========================================
  # JOB 1: BUILD AND TEST
  # ========================================
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            echo "üì¶ Installing dependencies from requirements.txt..."
            pip install -r requirements.txt
          else
            echo "‚ö†Ô∏è requirements.txt not found, installing basic dependencies..."
            pip install fastapi uvicorn
          fi

      - name: Check Python syntax
        run: |
          echo "üîç Checking Python syntax..."
          python -m compileall . -x ".venv|venv|__pycache__|\.git|\.github" || echo "‚ö†Ô∏è Continuing..."

      - name: Test Python files
        run: |
          echo "üìù Testing Python environment..."
          python -c "print('‚úÖ Python environment is working')"
          if [ -f "server.py" ]; then
            echo "‚úÖ Found server.py"
          else
            echo "‚ö†Ô∏è No server.py found"
          fi
          echo "‚úÖ Basic checks completed"

      - name: Check Docker build
        run: |
          if [ -f Dockerfile ]; then
            echo "üê≥ Testing Docker build..."
            docker build -t test-comot-api .
            echo "‚úÖ Docker image builds successfully"
            docker rmi test-comot-api || true
          else
            echo "‚ö†Ô∏è Dockerfile not found"
          fi

  # ========================================
  # JOB 2: DEPLOY TO VPS
  # ========================================
  deploy:
    needs: [build-and-test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'

    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: ${{ secrets.VPS_PORT || 22 }}
          timeout: 300s
          script: |
            echo "üöÄ Starting deployment process..."

            # Clean directory
            rm -rf ~/apps/comot-in
            mkdir -p ~/apps/comot-in
            cd ~/apps/comot-in

            # Clone repository
            echo "üì• Cloning repository..."
            git clone https://github.com/${{ github.repository }} .

            # Check Dockerfile
            if [ -f "dockerfile" ] && [ ! -f "Dockerfile" ]; then
              echo "üìù Renaming dockerfile to Dockerfile..."
              mv dockerfile Dockerfile
            fi

            if [ ! -f "Dockerfile" ]; then
              echo "‚ùå Dockerfile not found"
              ls -la
              exit 1
            fi

            # Create requirements if missing
            if [ ! -f "requirements.txt" ]; then
              echo "üìù Creating requirements.txt..."
              cat > requirements.txt << 'EOF'
            fastapi==0.104.1
            uvicorn[standard]==0.24.0
            pydantic==2.5.0
            EOF
            fi

            # Stop existing container
            docker stop comot-api 2>/dev/null || true
            docker rm comot-api 2>/dev/null || true

            # Build image
            echo "üî® Building Docker image..."
            docker build -t comot-api:latest .

            # Create env file
            cat > .env << 'EOF'
            PORT=9000
            ENVIRONMENT=production
            EOF

            # Run container
            echo "‚ñ∂Ô∏è Starting container..."
            docker run -d \
              --name comot-api \
              --env-file .env \
              -p 9000:9000 \
              --restart unless-stopped \
              comot-api:latest

            # Wait and health check
            sleep 15
            if curl -f -s http://localhost:9000/ >/dev/null 2>&1; then
              echo "‚úÖ Deployment successful!"
            else
              echo "‚ùå Health check failed"
              docker logs comot-api --tail 20
              exit 1
            fi

  # ========================================
  # JOB 3: NOTIFICATION
  # ========================================
  notify:
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always()

    steps:
      - name: Notify deployment status
        run: |
          if [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "‚úÖ Deployment successful!"
            echo "üåê FastAPI is live at http://${{ secrets.VPS_HOST }}:9000"
          else
            echo "‚ùå Deployment failed!"
          fi
